plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    signingConfigs {
        release {
        }
    }
    compileSdk 31

    defaultConfig {
        applicationId "com.example.pharmscan"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName getVersionPropertiesValue()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.compose.ui:ui:1.0.2'
    implementation 'androidx.compose.material:material:1.0.2'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.0.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    //testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.2'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.0.2'

    // Navigation Compose
    implementation 'androidx.navigation:navigation-compose:2.4.0-alpha09'

    // Room Database
    kapt "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-runtime:2.3.0"
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"



    // ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"

    // For JDK access'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.10"


    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-beta01'

    // Kotlin components
    //implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.30'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2-native-mt'
    implementation "androidx.collection:collection:1.1.0"



    implementation 'androidx.compose.runtime:runtime-livedata:1.0.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.1"

    //  Reading Files From External
    implementation "androidx.fragment:fragment:1.2.0"

    implementation "androidx.compose.animation:animation-graphics:1.1.0-alpha04"
}

def getVersionPropertiesValue()
{
    def propertiesFile = file('version.properties')
    def strVerBuild = "NotUpdated"
    def intVerBuild
    def strVerNumber = "NotUpdated"
    def fltVerNumber

    if(!propertiesFile.canRead()) {
        throw new GradleException("Could not read " + propertiesFile.name)
    }

    Properties properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    List gradleTasksNames = gradle.startParameter.getTaskNames()

    for(String taskName : gradleTasksNames)
    {
        if(taskName.contains("Debug"))
        {
            intVerBuild = properties['VERSION_BUILD'].toInteger() + 1
            strVerBuild = intVerBuild.toString()
            properties['VERSION_BUILD'] = strVerBuild
            strVerNumber = properties['VERSION_NUMBER']
            properties.store(propertiesFile.newWriter(), null)
            break
        }
        else if(taskName.contains("Release"))
        {
            intVerBuild = properties['VERSION_BUILD'].toInteger() + 1
            strVerBuild = intVerBuild.toString()
            properties['VERSION_BUILD'] = strVerBuild
            fltVerNumber = properties['VERSION_NUMBER'].toFloat() + 0.1F
            strVerNumber = String.format("%.1f", fltVerNumber)
            properties['VERSION_NUMBER'] = strVerNumber
            properties.store(propertiesFile.newWriter(), null)
            break
        }
    }

    return strVerNumber + "." + strVerBuild
}